services:
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    entrypoint: ["sh", "-c"]
    command: |
      cat <<'EOF' >/etc/otel-collector-config.yml
      # ── your OTEL Collector config starts here ──
      receivers:
        otlp:
          protocols:
            grpc:
            http
      processors:
        batch:
      exporters:
        logging:
          logLevel: debug
      service:
        pipelines:
          traces:
            receivers: [otlp]
            processors: [batch]
            exporters: [logging]
      # ── end OTEL config ──
      EOF
      exec /otelcontribcol --config=/etc/otel-collector-config.yml

  tempo:
    image: grafana/tempo:latest
    entrypoint: ["sh", "-c"]
    command: |
      cat <<'EOF' >/etc/tempo-config.yml
      # ── your Tempo config ──
      server:
        http_listen_port: 3200
      # …
      # ── end Tempo config ──
      EOF
      exec grafana-tempo --config.file=/etc/tempo-config.yml
    ports:
      - "3200:3200"

  loki:
    image: grafana/loki:latest
    entrypoint: ["sh", "-c"]
    command: |
      cat <<'EOF' >/etc/loki/local-config.yml
      # ── your Loki config ──
      auth_enabled: false
      server:
        http_listen_port: 3100
      # …
      # ── end Loki config ──
      EOF
      exec loki -config.file=/etc/loki/local-config.yml
    ports:
      - "3100:3100"

  prometheus:
    image: prom/prometheus:latest
    entrypoint: ["sh", "-c"]
    command: |
      cat <<'EOF' >/etc/prometheus/prometheus.yml
      # ── your Prometheus config ──
      global:
        scrape_interval: 15s
      scrape_configs:
        - job_name: 'prometheus'
          static_configs:
            - targets: ['localhost:9090']
      # ── end Prometheus config ──
      EOF
      exec prometheus --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    entrypoint: ["sh", "-c"]
    command: |
      cat <<'EOF' >/etc/grafana/grafana.ini
      # ── your Grafana config ──
      [server]
      http_addr = 
      http_port = 3000
      [security]
      admin_password = admin
      # ── end Grafana config ──
      EOF
      cat <<'EOF' > /etc/grafana/provisioning/datasources/default.yml
      apiVersion: 1
      datasources:
        - name: Tempo
          type: tempo
          access: proxy
          url: http://tempo:3200
          isDefault: false
          jsonData:
            httpMethod: GET
            serviceMap:
              enabled: true
      
        - name: Loki
          type: loki
          access: proxy
          url: http://loki:3100
          isDefault: true
          jsonData:
            maxLines: 1000
      
        - name: Prometheus
          type: prometheus
          url: http://prometheus:9090
          isDefault: false
          access: proxy
          editable: true
      EOF
      exec grafana-server --config=/etc/grafana/grafana.ini
    ports:
      - "3000:3000"
    depends_on:
      - tempo
      - prometheus
      - loki